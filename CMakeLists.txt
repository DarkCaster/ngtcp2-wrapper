cmake_minimum_required(VERSION 3.12)
project(ngtcp2_wrapper C CXX)

if(NOT TARGET_OS)
  set(TARGET_OS "linux")
endif()

if(NOT TARGET_ARCH)
  set(TARGET_ARCH "x86_64")
endif()

if(NOT TARGET_LIBDIR)
  set(TARGET_LIBDIR "lib64")
endif()

if(("${LIBS_BUILD_TYPE}" STREQUAL "STATIC") OR ("${LIBS_BUILD_TYPE}" STREQUAL "static"))
  set(LIBS_BUILD_TYPE "STATIC")
  set(OPENSSL_USE_STATIC_LIBS TRUE)
else()
  set(LIBS_BUILD_TYPE "SHARED")
  set(OPENSSL_USE_STATIC_LIBS FALSE)
endif()

set(OPENSSL_ROOT_DIR "${CMAKE_SOURCE_DIR}/External/dist/openssl_${TARGET_OS}_${TARGET_ARCH}")
set(OPENSSL_LIBRARIES "${CMAKE_SOURCE_DIR}/External/dist/openssl_${TARGET_OS}_${TARGET_ARCH}/lib")

find_package(OpenSSL REQUIRED)

find_library(LIBEV_LIB NAMES ev PATHS "${CMAKE_SOURCE_DIR}/External/dist/libev_${TARGET_OS}_${TARGET_ARCH}/lib" NO_DEFAULT_PATH)
if(NOT LIBEV_LIB)
  message(FATAL_ERROR "libev not found")
else()
  message(STATUS "Found libev: ${LIBEV_LIB}")
endif()

find_path(LIBEV_INCLUDE ev.h PATHS "${CMAKE_SOURCE_DIR}/External/dist/libev_${TARGET_OS}_${TARGET_ARCH}" NO_DEFAULT_PATH PATH_SUFFIXES include)
if(NOT LIBEV_INCLUDE)
  message(FATAL_ERROR "libev include directory not found")
else()
  message(STATUS "Found libev include dir: ${LIBEV_INCLUDE}")
endif()

find_library(LIBNGHTTP3_LIB NAMES nghttp3 PATHS "${CMAKE_SOURCE_DIR}/External/dist/nghttp3_${TARGET_OS}_${TARGET_ARCH}/${TARGET_LIBDIR}" NO_DEFAULT_PATH)
if(NOT LIBNGHTTP3_LIB)
  message(FATAL_ERROR "libnghttp3 not found")
else()
  message(STATUS "Found libnghttp3: ${LIBNGHTTP3_LIB}")
endif()

find_path(LIBNGHTTP3_INCLUDE nghttp3/nghttp3.h PATHS "${CMAKE_SOURCE_DIR}/External/dist/nghttp3_${TARGET_OS}_${TARGET_ARCH}" NO_DEFAULT_PATH PATH_SUFFIXES include)
if(NOT LIBNGHTTP3_INCLUDE)
  message(FATAL_ERROR "libnghttp3 include directory not found")
else()
  message(STATUS "Found libnghttp3 include dir: ${LIBNGHTTP3_INCLUDE}")
endif()

find_library(LIBNGTCP2_LIB NAMES ngtcp2 PATHS "${CMAKE_SOURCE_DIR}/External/dist/ngtcp2_${TARGET_OS}_${TARGET_ARCH}/${TARGET_LIBDIR}" NO_DEFAULT_PATH)
if(NOT LIBNGTCP2_LIB)
  message(FATAL_ERROR "libngtcp2 not found")
else()
  message(STATUS "Found libngtcp2: ${LIBNGTCP2_LIB}")
endif()

find_path(LIBNGTCP2_INCLUDE ngtcp2/ngtcp2.h PATHS "${CMAKE_SOURCE_DIR}/External/dist/ngtcp2_${TARGET_OS}_${TARGET_ARCH}" NO_DEFAULT_PATH PATH_SUFFIXES include)
if(NOT LIBNGTCP2_INCLUDE)
  message(FATAL_ERROR "libngtcp2 include directory not found")
else()
  message(STATUS "Found libngtcp2 include dir: ${LIBNGTCP2_INCLUDE}")
endif()
